# Generated by Django 5.1.4 on 2025-01-24 06:53

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('indexAndCommodity', '0002_remove_trade_index_and_commodity_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IndexAndCommodity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tradingSymbol', models.CharField(db_index=True, editable=False, help_text='Index trading symbol', max_length=50, unique=True)),
                ('exchange', models.CharField(db_index=True, editable=False, help_text='Index exchange', max_length=50)),
                ('instrumentName', models.CharField(choices=[('INDEX', 'Index'), ('COMMODITY', 'Commodity')], default='INDEX', editable=False, help_text='Instrument type', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Index creation date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Index update date')),
                ('is_active', models.BooleanField(default=True, help_text='Index status')),
            ],
            options={
                'verbose_name': 'Index',
                'verbose_name_plural': 'Indices',
                'constraints': [models.UniqueConstraint(fields=('tradingSymbol', 'exchange', 'instrumentName'), name='unique_index')],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('INTRADAY', 'Intraday'), ('POSITIONAL', 'Positional')], db_index=True, help_text='Type of trade (Intraday/Positional)', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], db_index=True, default='PENDING', help_text='Current status of the trade', max_length=20)),
                ('plan_type', models.CharField(choices=[('BASIC', 'Basic'), ('PREMIUM', 'Premium'), ('SUPER_PREMIUM', 'Super Premium')], default='BASIC', help_text='Subscription plan type for this trade', max_length=15)),
                ('warzone', models.DecimalField(decimal_places=2, default=0.0, help_text='Risk level indicator for the trade', max_digits=10)),
                ('warzone_history', models.JSONField(blank=True, default=list, help_text='History of warzone changes', null=True)),
                ('is_free_call', models.BooleanField(default=False, help_text='Indicates if this is a free trading signal')),
                ('image', models.ImageField(blank=True, help_text='Technical analysis chart or related image', null=True, upload_to='trade_images/%Y/%m/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the trade was completed or cancelled', null=True)),
                ('index_and_commodity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='index_and_commodity_trades', to='indexAndCommodity.indexandcommodity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='index_and_commodity_trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Insight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_image', models.ImageField(help_text='Technical analysis prediction chart', upload_to='trade_insights/predictions/')),
                ('actual_image', models.ImageField(blank=True, help_text='Actual outcome chart', null=True, upload_to='trade_insights/actuals/')),
                ('prediction_description', models.TextField(help_text='Detailed description of the predicted outcome')),
                ('actual_description', models.TextField(blank=True, help_text='Description of the actual outcome', null=True)),
                ('accuracy_score', models.FloatField(blank=True, help_text='Percentage accuracy of the prediction', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('analysis_result', models.JSONField(blank=True, default=dict, help_text='Structured analysis result with sections and paragraphs', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trade', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='index_and_commodity_insight', to='indexAndCommodity.trade')),
            ],
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bull_scenario', models.TextField(blank=True, help_text='Analysis of potential bullish outcomes', null=True)),
                ('bear_scenario', models.TextField(blank=True, help_text='Analysis of potential bearish outcomes', null=True)),
                ('status', models.CharField(choices=[('BEARISH', 'Bearish'), ('BULLISH', 'Bullish'), ('NEUTRAL', 'Neutral')], default='NEUTRAL', help_text='Current market sentiment', max_length=20)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the analysis was completed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trade', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='index_and_commodity_analysis', to='indexAndCommodity.trade')),
            ],
            options={
                'verbose_name_plural': 'Analyses',
            },
        ),
        migrations.CreateModel(
            name='TradeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buy', models.DecimalField(decimal_places=2, help_text='Entry price point', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('target', models.DecimalField(decimal_places=2, help_text='Target price for the trade', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('sl', models.DecimalField(decimal_places=2, help_text='Stop loss price point', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Stop Loss')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='index_and_commodity_history', to='indexAndCommodity.trade')),
            ],
            options={
                'verbose_name_plural': 'Trade histories',
                'ordering': ['-timestamp'],
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['status', 'trade_type', 'plan_type'], name='indexAndCom_status_a3593c_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['created_at', 'user'], name='indexAndCom_created_f262b2_idx'),
        ),
        migrations.AddIndex(
            model_name='tradehistory',
            index=models.Index(fields=['trade', 'timestamp'], name='indexAndCom_trade_i_279ab1_idx'),
        ),
    ]
